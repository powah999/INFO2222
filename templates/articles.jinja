{% extends 'base.jinja' %}


{% block content %}
<style>
    .button {
        background-color: #b0abd2; 
        border: none;
        color: #1b1b1b;
        padding: 12px;
        text-align: center;
        text-decoration: none;
        display: inline-block;
        font-size: 14px;
        margin: 4px 2px;
        cursor: pointer;
        position: fixed;
        bottom: 16px;
        right: 12px;
        border-radius: 4px;
    }
    
    .button:hover {
        background-color: #9d83fa;
    }

    .article {
        box-shadow: rgba(50, 50, 93, 0.25) 0px 2px 5px -1px, rgba(0, 0, 0, 0.3) 0px 1px 3px -1px;
        padding-left: 10px;
        padding-top: 5px;
    }

    .article_box {
        position: relative;
    }
    
    .popup .article_box {
        visibility: hidden;
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        background-color: #b7b7b7;
        padding: 20px;
        }
    
    .re_post {
        background-color: #b0abd2; 
        border: none;
        color: #1b1b1b;
        padding: 12px;
        text-align: center;
        text-decoration: none;
        font-size: 14px;
        margin: 4px 2px;
        cursor: pointer;
        position: absolute;
        bottom: 5px;
        right: 20px;
        }

    .re_post:hover {
        background-color: #9d83fa;
    }
        
    .popup {
        display: inline-block;
        cursor: pointer;
    }

    .popup .show {
        visibility: visible;
    }

    .popup .hide {
        visibility: hidden;
    }


    .content-box {
        width: 500px;
        height: 200px; 
    }

</style>



<ul id="articles" style="padding:20px;margin-top:30px;list-style-type:none;">
<h1>Home</h1>
<br/>
{% if articles %}
    {% for article in articles %}
    <li id="article" class="article">
        <h2 class="title" id="article_title">{{ article.title }}</h2>
        {{ article.author.username }} <br/>
        <small> <b>{{ article.author.account }}</b>
        {% if article.author.account == 'staff' %}
            {{ article.author.staff_role }}
        {% endif %}
        </small> <br/>
        <p style="font-size: small" id="article_date"> {{ article.date }} </p>
        <p id="article_content" >{{ article.content }}</p> <br/>
        {% if article.file_name != '' %}
            <a id="download" href="#">{{ article.file_name }} </a>
        {% endif %}
        
        <!-- enable button if staff -->
        {% if account == "staff" %}
            <button class="delete" onclick="remove(this, '{{ article.id }}', 'delete_article')">Delete</button>
            <button class="edit" id="edit" onclick="edit(this, '{{ article.title }}', '{{ article.content }}', '{{ article.id }}')">Edit</button>
        {% elif article.author.username == username and can_post %}
            <button class="edit" id ="edit" onclick="edit(this, '{{ article.title }}', '{{ article.content }}', '{{ article.id }}')">Edit</button>   
        {% endif %}
        <br/>

        <a href="javascript:toggle_comments()" id="hide_view" class="hide_view">View comments</a>

        <ul id="comment_section" class="comment_section" style="display:none;list-style-type:none;">
        {% if article.comments %}
            {% for comment in article.comments %}
            <li id="comment" class="comment" style="font-size:small;">
                <div> <b>{{ comment.author.username }}</b> {{ comment.author.account }} </div> 
                {% if comment.author.account == 'staff' %}
                    <div id="role" style="color:#969696;">{{ comment.author.staff_role }}</div>
                {% endif %}
                <div>{{ comment.date }}</div>
                <p id="content">{{ comment.content }}</p> <br/>
                {% if account == "staff" %}
                    <button class="delete" onclick="remove(this, '{{ comment.id }}', 'delete_comment')">Delete</button>
                {% endif %}
            </li>
            {% endfor %}
        {% else %}
        <li class="no_articles" id="no_articles">
            No comments posted yet
        </li>
        {% endif %}
        </ul>
        <a href="javascript:toggle_comments()" id="show_view" class="show_view" style="display:none;">Hide comments <br/> </a> 

        <input style="margin:8px" id="add_comment" placeholder="Add a comment">
        <button id="comment_button" onclick="comment('{{ article.id }}')">Comment</button>

    </li>
    {% endfor %}
{% else %}
<li class="no_articles" id="no_articles">
    No articles posted yet
</li> 
{% endif %}
</ul>




<div class="popup" id="popup">
    <div class="article_box" id="article_box">
        <h1>Edit Article</h1>
            <p>Title:</p>
                <input id="title" width="500px" />
            <p>Content:</p>
                <input id="content" class="content-box"/>
            <br/>
            <br/>
            <br/>
            <button class="re_post" id="re_post">Re-post</button>
            
    </div>
    
</div>

<a href={{ url_for('new_article') }}>
    <button class="button" >New Article</button>
</a>

<!--User profile-->
<div id="profile">
    <h3>Profile</h3>
    <div> {{ username }} </div> 
    <div> {{ account }} 
        {% if account == "staff" %}
            {{ role }}
        {% endif %}
    </div>
    <div id="perms"> Current permissions status: </div>
        {% if can_chat %}
            <div>Posting articles: allowed </div>
        {% else %}
            <div>Posting articles: muted </div>
        {% endif %} 
        
        {% if can_post %} 
            <div>Joining chatrooms: allowed </div>
        {% else %}
            <div>Joining chatrooms: muted </div>
        {% endif %}
</div>


<script src="/static/js/libs/socket.io.min.js"></script>
<script>
    const socket = io();
    let username = "{{ username }}";
    let account = "{{ account }}";
    let role = "{{ role }}";

    article = document.getElementsByClassName("article");
    article.forEach(function(elem) {
        a = elem.querySelector("#download");
        console.log(a.textContent);
        if (a) {
            file_name = a.textContent;
            let getFile = "{{ url_for('upload') }}";
            axios.get(getFile, {
                file_name: file_name,
                responseType:'blob',
            })
            .then((file) => {
                const url = URL.createObjectURL(file.data);
                a.href = url;
                a.download = file_name;
                console.log("success");
            })
            .catch((err) => {
                console.log("fail");
            })
        }
    });
    
    
    function toggle_comments() {
        comments = document.getElementById("comment_section");
        show_sign= document.getElementById("hide_view");
        hide_sign = document.getElementById("show_view");

        if (comments.style.display === "none") {
            comments.style.display = "block";
            show_sign.style.display = "none";
            hide_sign.style.display = "block";
        } else {
            comments.style.display = "none";
            show_sign.style.display = "block";
            hide_sign.style.display = "none";
        }
    }

    function remove(liElem, id, call) {
        console.log(id)

        socket.emit(call, id, (success) => {
            if (typeof success == "string") {
                //unsuccessful removal
                alert(success);
            }
            else {
                //dynamically update list
                var li_item = liElem.parentNode;
                var ul = li_item.parentNode;
                ul.removeChild(li_item);

                if (call === "delete_article" and ul.length === 0) {
                    none = document.getElementById("no_articles");
                    none.style.display = "block";
                }
            }
        }); 

        
    }


    //popup to edit post
    function edit(liElem, old_title, old_content, id) {
        popup = document.getElementById('article_box');

        document.getElementById("title").value = old_title;
        document.getElementById("content").value = old_content;

        popup.classList.toggle("show");

        var repost_button = document.getElementById('re_post');
        repost_button.onclick = function () {
            re_post(liElem, old_title, old_content, id);
        };
    }

    //update post
    function re_post(liElem, old_title, old_content, id) {
        let title = document.getElementById("title").value;
        let content = document.getElementById("content").value;

        console.log(old_title);
        console.log(title);
        console.log(old_content);
        console.log(content);
        console.log(id);

        socket.emit("re_post", id, title, content, (success) => {
            console.log(success)
            
            //successful post
            if (typeof success == "string") {
                //update list dynamically
                var article = liElem.parentNode;
                var new_article = article.cloneNode(true);
                
                var date = new_article.querySelector("#article_date");
                date.textContent = success;
                
                var old_title = new_article.querySelector("#article_title");
                old_title.textContent = title;
                
                var old_content = new_article.querySelector("#article_content");  
                old_content.textContent = content;

                var all_articles = article.parentNode;
                all_articles.replaceChild(new_article, article);

            }
            else {
                alert("Could not update article");
            }

         });
        
        popup = document.getElementById('article_box');
        popup.classList.toggle("hide");  
    }

    //create new comment
    function comment(comment_button, article_id) {
        content = $("#add_comment").val();
        socket.emit("comment", username, article_id, content, (date) => {
            if (typeof date == "string") {
                //add comment to article
                all_comments = document.getElementById("comment_section");
                var new_comment = document.createElement("li");
                new_comment.style.fontSize = "small";

                var div = document.createElement("div");
                var bold = document.createElement("b");
                bold.innerText = username;
                div.appendChild(bold);
                div.append(" " + account);
                
                var div_date = document.createElement("div");
                div_date.innerText = date
                
                var p = document.createElement("p");
                p.innerText = content;

                new_comment.appendChild(div);
                new_comment.appendChild(div_date);
                if (account == "staff") {
                    let div_role = document.createElement("div");
                    div_role.innerText = role;
                    div_role.style.color = "#969696";
                    new_comment.appendChild(div_role);
                }
                new_comment.appendChild(p);

                all_comments.appendChild(new_comment);
            }
            else {
                alert("Could not create comment");
            }
        })
    }

                

</script>

{% endblock %}

