{% extends 'base.jinja' %}


{% block content %}
<style>
    .button {
        background-color: #b0abd2; 
        border: none;
        color: #1b1b1b;
        padding: 12px;
        text-align: center;
        text-decoration: none;
        display: inline-block;
        font-size: 14px;
        margin: 4px 2px;
        cursor: pointer;
        position: fixed;
        bottom: 16px;
        right: 12px;
        border-radius: 4px;
    }
    
    .button:hover {
        background-color: #9d83fa;
    }

    .article {
        box-shadow: rgba(50, 50, 93, 0.25) 0px 2px 5px -1px, rgba(0, 0, 0, 0.3) 0px 1px 3px -1px;
        padding-left: 10px;
    }

    .article {
        padding-top: 5px;
        
    }

    .article_box {
        position: relative;
    }
    
    .popup .article_box {
        visibility: hidden;
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        background-color: #b7b7b7;
        padding: 20px;
        }
    
    .re_post {
        background-color: #b0abd2; 
        border: none;
        color: #1b1b1b;
        padding: 12px;
        text-align: center;
        text-decoration: none;
        font-size: 14px;
        margin: 4px 2px;
        cursor: pointer;
        position: absolute;
        bottom: 5px;
        right: 20px;
        }

    .re_post:hover {
        background-color: #9d83fa;
    }
        
    .popup {
        display: inline-block;
        cursor: pointer;
    }

    .popup .show {
        visibility: visible;
    }

    .content-box {
        width: 500px;
        height: 200px; 
    }

</style>



<ul id="articles" style="padding:20px;margin-top:30px;">
<h1>Articles</h1>
<br/>
{% if articles %}
    {% for article in articles %}
    <li id="article" class="article">
        <h2 class="title">{{ article.title }}</h2>
        {{ article.author.username }} <br/>
        <small> <b>{{ article.author.account }}</b>
        {% if article.author.account == 'staff' %}
            {{ article.author.staff_role }}
        {% endif %}
        </small> <br/>
        <small> {{ article.date }}  </small><br/><br/>
        {{ article.content }} <br/><br/>
        <!-- enable button if staff -->
        {% if account == "staff" %}
            <button class="delete" onclick="remove('{{ article.id }}')">Delete</button>
            <button class="edit" onclick="edit('{{ article.id }}', '{{ article.title }}', '{{ article.content }}')">Edit</button>
        {% elif article.author.username == username and can_post %}
            <button class="edit" onclick="edit('{{ article.id }}', '{{ article.title }}', '{{ article.content }}')">Edit</button>   
        {% endif %}
        <button class="comment" onclick="comment('{{ article.id }}')">Comment</button>
    </li>
    {% endfor %}
{% else %}
<li>
    No articles posted yet
</li> 
{% endif %}

</ul>

<div class="popup" id="popup">
    <div class="article_box" id="article_box">
        <h1>Edit Article</h1>
            <p>Title:</p>
                <input id="title" width="500px" />
            <p>Content:</p>
                <input id="content" class="content-box"/>
            <br/>
            <br/>
            <br/>
            <button class="re_post" id= "re_post" onclick="re_post()">Re-post</button>
            
    </div>
    
</div>

<a href={{ url_for('new_article') }}>
    <button class="button" >New Article</button>
</a>

<script src="/static/js/libs/socket.io.min.js"></script>
<script>
    let articles = {{ articles }};
    const socket = io();
    // Add event listeners to the delete buttons
    var deleteButtons = document.getElementsByClassName('delete');
    for (var i = 0; i < deleteButtons.length; i++) {
        deleteButtons[i].addEventListener('click', function(event) {
            var article = event.target.parentNode; // The 'li' element to remove

            removeListItem(article);

        });
    }

    // Function to remove an item from the list
    function removeListItem(item) {
        // The parent node ('ul') of the item to be removed ('li')
        var list = document.getElementById('articles');
        list.removeChild(item);
    }


    function remove(article_id) {
        socket.emit("delete_article", article_id, (success) => {
            if (typeof success == "string") {
                alert(success);
            }
        }); 
    }


    //popup to edit post
    function edit(title, content, id) {
        popup = document.getElementById('article_box');

        document.getElementById("title").value = title
        document.getElementById("content").value = content;

        popup.classList.toggle("show");

        var repost_button = document.getElementById('re_post');
        repost_button.addEventListener('click', re_post(id, title, content));
    }



    //update post
    function re_post(id, title, content) {
        console.log("works");

        socket.emit("re_post", id, title, content, (success) => {
            console.log(success)
            //successful post
            
            if (success) {
                //upate list dynamically
                index = articles.findIndex(obj => obj.id == id);
                articles[index] = success;
                console.log("New:" + articles[index]);
                //popup = document.getElementById("success");
            }
            else {
                alert(success);
                //popup = document.getElementById("fail"); 
            }

            //console.log(popup);

           // popup.classList.toggle("show");
         });
        

        console.log(success);
        
    
        
    }
</script>

{% endblock %}

