{% extends 'base.jinja' %}


{% block content %}
<style>
    .button {
        background-color: #b0abd2; 
        border: none;
        color: #1b1b1b;
        padding: 12px;
        text-align: center;
        text-decoration: none;
        display: inline-block;
        font-size: 14px;
        margin: 4px 2px;
        cursor: pointer;
        position: fixed;
        bottom: 16px;
        right: 12px;
        border-radius: 4px;
    }
    
    .button:hover {
        background-color: #9d83fa;
    }

    .article {
        box-shadow: rgba(50, 50, 93, 0.25) 0px 2px 5px -1px, rgba(0, 0, 0, 0.3) 0px 1px 3px -1px;
        padding-left: 10px;
        padding-top: 5px;
    }

    .article_box {
        position: relative;
    }
    
    .popup .article_box {
        visibility: hidden;
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        background-color: #b7b7b7;
        padding: 20px;
        }
    
    .re_post {
        background-color: #b0abd2; 
        border: none;
        color: #1b1b1b;
        padding: 12px;
        text-align: center;
        text-decoration: none;
        font-size: 14px;
        margin: 4px 2px;
        cursor: pointer;
        position: absolute;
        bottom: 5px;
        right: 20px;
        }

    .re_post:hover {
        background-color: #9d83fa;
    }
        
    .popup {
        display: inline-block;
        cursor: pointer;
    }

    .popup .show {
        visibility: visible;
    }

    .popup .hide {
        visibility: hidden;
    }

    .commment_section .show {
        visibility: visible;
    }

    .commment_section .hide {
        visibility: hidden;
    }

    .commment_section {
        visibility: hidden;
    }

    .content-box {
        width: 500px;
        height: 200px; 
    }

</style>



<ul id="articles" style="padding:20px;margin-top:30px;list-style-type:none;">
<h1>Articles</h1>
<br/>
{% if articles %}
    {% for article in articles %}
    <li id="article" class="article">
        <h2 class="title" id="article_title">{{ article.title }}</h2>
        {{ article.author.username }} <br/>
        <small> <b>{{ article.author.account }}</b>
        {% if article.author.account == 'staff' %}
            {{ article.author.staff_role }}
        {% endif %}
        </small> <br/>
        <p style="font-size: small" id="article_date"> {{ article.date }} </p>
        <p id="article_content" >{{ article.content }}</p> <br/>
        <!-- enable button if staff -->
        {% if account == "staff" %}
            <button class="delete" onclick="remove('{{ article.id }}')">Delete</button>
            <button class="edit" id="edit" onclick="edit(this, '{{ article.title }}', '{{ article.content }}', '{{ article.id }}')">Edit</button>
        {% elif article.author.username == username and can_post %}
            <button class="edit" id ="edit" onclick="edit(this, '{{ article.title }}', '{{ article.content }}', '{{ article.id }}')">Edit</button>   
        {% endif %}
        <br/>

        <a href="javascript:toggle_comments('show')" id="comment_view">View comments</a>
        <ul id="comment_section" class="comment_section">
        {% if article.comments %}
            {% for comment in article.comments %}
            <li id="comment" class="comment" style="font-size: small">
                <p id="username">{{ comment.author.username }} {{ comment.date }} </p> 
                <b id="account">{{ comment.author.account }} </b>
                {% if comment.author.account == 'staff' %}
                    <div>{{ comment.author.staff_role }}</div>
                {% endif %}
                <p id="content">{{ comment.content }}</p>
            </li>
        {% endif %}
        <input id="comment" placeholder="Add a comment">
        <button class="comment" id="comment_button" onclick="comment(this, '{{ article.id }}')">Comment</button>
        </ul>
        
    </li>
    {% endfor %}
{% else %}
<li>
    No articles posted yet
</li> 
{% endif %}

</ul>

<div class="popup" id="popup">
    <div class="article_box" id="article_box">
        <h1>Edit Article</h1>
            <p>Title:</p>
                <input id="title" width="500px" />
            <p>Content:</p>
                <input id="content" class="content-box"/>
            <br/>
            <br/>
            <br/>
            <button class="re_post" id="re_post">Re-post</button>
            
    </div>
    
</div>

<a href={{ url_for('new_article') }}>
    <button class="button" >New Article</button>
</a>


<script src="/static/js/libs/socket.io.min.js"></script>
<script>
    const socket = io();
    let username = "{{ username }}";
    let account = "{{ account }}";
    let role = "{{ role }}";

    // Add event listeners to the delete buttons
    /*
    var deleteButtons = document.getElementsByClassName('delete');
    for (var i = 0; i < deleteButtons.length; i++) {
        deleteButtons[i].addEventListener('click', function(event) {
            var article = event.target.parentNode; // The 'li' element to remove

            removeListItem(article);

        });
    }

   

    // Function to remove an item from the list
    function removeListItem(item) {
        // The parent node ('ul') of the item to be removed ('li')
        var list = document.getElementById('articles');
        list.removeChild(item);
    }
    */

    function toggle_comments(action) {
        comments = document.getElementById("comment_section");
        text = document.getElementById("comment_view");
        if (action == "show") {
            comments.classList.toggle("show");
            text.textContent = "Hide comments";
        }
        else {
            comments.classList.toggle("hide");
            text.textContent = "View comments";
        }
        
    }

    function remove(liElem, article_id) {
        socket.emit("delete_article", article_id, (success) => {
            if (typeof success == "string") {
                //unsuccessful removal
                alert(success);
            }
            else {
                //dynamically update articles list
                var article = liElem.parentNode;
                var all_articles = article.parentNode;
                all_articles.removeChild(article);
            }
        }); 
    }


    //popup to edit post
    function edit(liElem, old_title, old_content, id) {
        popup = document.getElementById('article_box');

        document.getElementById("title").value = old_title;
        document.getElementById("content").value = old_content;

        popup.classList.toggle("show");

        var repost_button = document.getElementById('re_post');
        repost_button.onclick = function () {
            re_post(liElem, old_title, old_content, id);
        };
    }

    //update post
    function re_post(liElem, old_title, old_content, id) {
        let title = document.getElementById("title").value;
        let content = document.getElementById("content").value;

        console.log(old_title);
        console.log(title);
        console.log(old_content);
        console.log(content);
        console.log(id);

        socket.emit("re_post", id, title, content, (success) => {
            console.log(success)
            
            //successful post
            if (typeof success == "string") {
                //update list dynamically
                var article = liElem.parentNode;
                var new_article = article.cloneNode(true);
                
                var date = new_article.querySelector("#article_date");
                date.textContent = success;
                
                var old_title = new_article.querySelector("#article_title");
                old_title.textContent = title;
                
                var old_content = new_article.querySelector("#article_content");  
                old_content.textContent = content;

                var all_articles = article.parentNode;
                all_articles.replaceChild(new_article, article);

            }
            else {
                alert("Could not update article");
            }

         });
        
        popup = document.getElementById('article_box');
        popup.classList.toggle("hide");  
    }

    //create new comment
    function comment(comment_button, article_id) {
        content = $("#comment").val();
        socket.emit("comment", username, article_id, content, (date) => {
            if (typeof success == "string") {
                //add comment to article
                list = getElementById("comments")
                var all_comments = comment_button.parentNode;
                var new_comment = document.createElement("li");

                var p = document.createElement("p");
                var b = document.createElement("b");
                b.innerText = username;
                p.appendChild(username);
                p.appendChild(date);
                
                var b2 = document.createElement("b");
                b2.innerText = account;

                if (account == "staff") {
                    let div = document.createElement("div");
                    div.innerText = role;
                }
                
                var p2 = document.createElement("p");
                p2.innerText = content;

                new_comment.appendChild(p);
                new_comment.appendChild(b);
                new_comment.appendChild(b2);
                if (account == "staff") {
                    new_comment.appendChild(div);
                }
                new_comment.appendChild(p2);

                all_comments.appendChild(new_comment);
            }
            else {
                alert("Could not create comment");
            }
        })
    }

                

</script>

{% endblock %}

